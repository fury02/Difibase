// Version: 1.0.0
type AssocList<K, V> = List<(K, V)>;
type AssocList__1<K, V> = AssocList<K, V>;
type Branch<K, V> = {left : Trie<K, V>; right : Trie<K, V>; size : Nat};
type FileHash = {text_hash : Text; type_hash : TypeHash; value : [Nat8]};
type FileIdentifier =
  {
    description : Text;
    guid : GUID__1;
    name : Text;
    uuid : UUID__2;
    version : Nat
  };
type GUID = Text;
type GUID__1 = GUID;
type Hash = Nat32;
type Key<K> = {hash : Hash; key : K};
type Leaf<K, V> = {keyvals : AssocList__1<Key<K>, V>; size : Nat};
type List<T> = ?(T, List<T>);
type Trie<K, V> = {#branch : Branch<K, V>; #empty; #leaf : Leaf<K, V>};
type TypeHash =
  {#kessak; #none; #sha224; #sha256; #sha384; #sha512; #unknown};
type UUID = [Nat8];
type UUID__2 = UUID;
type Wasm = wasm_module__1;
type WasmIdentifier = FileIdentifier;
type WasmIdentifier__2 = WasmIdentifier;
type WasmObject__1 = WasmObjects;
type WasmObjects = {file_hash : FileHash; updated : Bool; wasm : Wasm};
type wasm_module__1 = [Nat8];
actor {
  stable var wasm_files_entries : [(WasmIdentifier__2, WasmObject__1)];
  stable var white_list :
    {#branch : Branch<Principal, ()>; #empty; #leaf : Leaf<Principal, ()>}
};
